// <auto-generated />
using System;
using BeyondLaDecor.Beyond.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeyondLaDecor.Data.Migrations
{
    [DbContext(typeof(BeyondDbContext))]
    [Migration("20190624202620_BeyondLaDecor_InitialCreate")]
    partial class BeyondLaDecor_InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BeyondLaDecor.Data.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<int>("Capacity");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime>("Date");

                    b.Property<string>("DecorId");

                    b.Property<int>("EventTypeId");

                    b.Property<DateTime>("LastUpdatedOn");

                    b.Property<string>("LocationName");

                    b.Property<int?>("PackageId")
                        .IsRequired();

                    b.Property<int?>("TableCount");

                    b.Property<int>("UserId");

                    b.HasKey("EventId");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("UserId");

                    b.HasIndex("PackageId", "EventTypeId", "UserId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.EventType", b =>
                {
                    b.Property<int>("EventTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DecorId");

                    b.Property<DateTime>("LastUpdatedOn");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("EventTypeId");

                    b.HasIndex("EventTypeId", "Name");

                    b.ToTable("EventType");
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.Package", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cost");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DecorId");

                    b.Property<DateTime>("LastUpdatedOn");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("PackageId");

                    b.HasIndex("Name");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.PackageProduct", b =>
                {
                    b.Property<int>("PackageProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DecorId");

                    b.Property<DateTime>("LastUpdatedOn");

                    b.Property<int>("PackageId");

                    b.Property<int>("ProductId");

                    b.HasKey("PackageProductId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PackageId", "ProductId");

                    b.ToTable("PackageProduct");
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.PackageService", b =>
                {
                    b.Property<int>("PackageServiceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DecorId");

                    b.Property<DateTime>("LastUpdatedOn");

                    b.Property<int>("PackageId");

                    b.Property<int>("ServiceId");

                    b.HasKey("PackageServiceId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("PackageId", "ServiceId");

                    b.ToTable("PackageService");
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cost");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DecorId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<DateTime>("LastUpdatedOn");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("ProductTypeId");

                    b.Property<int?>("ServiceTypeId");

                    b.Property<bool>("ThirdParty");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("ServiceTypeId");

                    b.HasIndex("Name", "ProductTypeId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.ProductServiceType", b =>
                {
                    b.Property<int>("ProductServiceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DecorId");

                    b.Property<DateTime>("LastUpdatedOn");

                    b.Property<int>("ProductId");

                    b.Property<int>("ServiceTypeId");

                    b.HasKey("ProductServiceTypeId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ServiceTypeId", "ProductId");

                    b.ToTable("ProductServiceType");
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.ProductType", b =>
                {
                    b.Property<int>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DecorId");

                    b.Property<DateTime>("LastUpdatedOn");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ProductTypeId");

                    b.HasIndex("Name");

                    b.ToTable("ProductType");
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cost");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DecorId");

                    b.Property<DateTime>("LastUpdatedOn");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("ServiceTypeId");

                    b.HasKey("ServiceId");

                    b.HasIndex("ServiceTypeId", "Name");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.ServiceType", b =>
                {
                    b.Property<int>("ServiceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DecorId");

                    b.Property<DateTime>("LastUpdatedOn");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("ParentServiceTypeId");

                    b.HasKey("ServiceTypeId");

                    b.HasIndex("Name");

                    b.HasIndex("ParentServiceTypeId");

                    b.ToTable("ServiceType");
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.ServiceVendor", b =>
                {
                    b.Property<int>("ServiceVendorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DecorId");

                    b.Property<DateTime>("LastUpdatedOn");

                    b.Property<int>("ServiceId");

                    b.Property<int>("VendorId");

                    b.HasKey("ServiceVendorId");

                    b.HasIndex("VendorId");

                    b.HasIndex("ServiceId", "VendorId");

                    b.ToTable("ServiceVendor");
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.Setting", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DecorId");

                    b.Property<DateTime>("LastUpdatedOn");

                    b.Property<string>("Name");

                    b.Property<int>("SettingType");

                    b.HasKey("SettingId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Completed");

                    b.Property<int?>("EventId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("ServiceId");

                    b.HasKey("TaskId");

                    b.HasIndex("EventId");

                    b.HasIndex("ServiceId");

                    b.HasIndex("Name", "ServiceId", "EventId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<int?>("AdminstratorId");

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DecorId");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<bool>("IsAdministrator");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<DateTime>("LastUpdatedOn");

                    b.Property<string>("State")
                        .IsRequired();

                    b.Property<string>("ZipCode")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.HasIndex("AdminstratorId");

                    b.HasIndex("Email");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.UserSetting", b =>
                {
                    b.Property<int>("UserSettingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientId");

                    b.Property<bool>("Enabled");

                    b.Property<int>("SettingId");

                    b.Property<int>("UserId");

                    b.HasKey("UserSettingId");

                    b.HasIndex("ClientId");

                    b.HasIndex("SettingId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DecorId");

                    b.Property<DateTime>("LastUpdatedOn");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("ServiceTypeId");

                    b.HasKey("VendorId");

                    b.HasIndex("Name");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.Event", b =>
                {
                    b.HasOne("BeyondLaDecor.Data.Models.EventType", "EventType")
                        .WithMany("Events")
                        .HasForeignKey("EventTypeId")
                        .HasConstraintName("FK_Event_EventType")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BeyondLaDecor.Data.Models.Package", "Package")
                        .WithMany("Events")
                        .HasForeignKey("PackageId")
                        .HasConstraintName("FK_Package_Event")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BeyondLaDecor.Data.Models.User", "User")
                        .WithMany("Events")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_User_Event")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.PackageProduct", b =>
                {
                    b.HasOne("BeyondLaDecor.Data.Models.Package", "Package")
                        .WithMany("PackageProducts")
                        .HasForeignKey("PackageId")
                        .HasConstraintName("FK_Package_PackageProduct")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BeyondLaDecor.Data.Models.Product", "Product")
                        .WithMany("PackageProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_PackageProduct")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.PackageService", b =>
                {
                    b.HasOne("BeyondLaDecor.Data.Models.Package", "Package")
                        .WithMany("PackageServices")
                        .HasForeignKey("PackageId")
                        .HasConstraintName("FK_Package_PackageService")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BeyondLaDecor.Data.Models.Service", "Service")
                        .WithMany("PackageServices")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK_Service_PackageService")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.Product", b =>
                {
                    b.HasOne("BeyondLaDecor.Data.Models.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .HasConstraintName("FK_Product_ProductType")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BeyondLaDecor.Data.Models.ServiceType", "ServiceType")
                        .WithMany("Products")
                        .HasForeignKey("ServiceTypeId")
                        .HasConstraintName("FK_Product_ServiceType")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.ProductServiceType", b =>
                {
                    b.HasOne("BeyondLaDecor.Data.Models.Product", "Product")
                        .WithMany("ProductServiceTypes")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Product_ProductServiceTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BeyondLaDecor.Data.Models.ServiceType", "ServiceType")
                        .WithMany("ProductServiceTypes")
                        .HasForeignKey("ServiceTypeId")
                        .HasConstraintName("FK_ServiceType_ProductServiceTypeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.Service", b =>
                {
                    b.HasOne("BeyondLaDecor.Data.Models.ServiceType", "ServiceType")
                        .WithMany("Services")
                        .HasForeignKey("ServiceTypeId")
                        .HasConstraintName("FK_Service_ServiceType")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.ServiceType", b =>
                {
                    b.HasOne("BeyondLaDecor.Data.Models.ServiceType", "ParentServiceType")
                        .WithMany("ChildServiceTypes")
                        .HasForeignKey("ParentServiceTypeId")
                        .HasConstraintName("FK_Parent_ServiceType")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.ServiceVendor", b =>
                {
                    b.HasOne("BeyondLaDecor.Data.Models.Service", "Service")
                        .WithMany("ServiceVendors")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK_ServiceVendor_Service")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BeyondLaDecor.Data.Models.Vendor", "Vendor")
                        .WithMany("ServiceVendors")
                        .HasForeignKey("VendorId")
                        .HasConstraintName("FK_ServiceVendor_Vendor")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.Task", b =>
                {
                    b.HasOne("BeyondLaDecor.Data.Models.Event", "Event")
                        .WithMany("Tasks")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_Event_Task")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BeyondLaDecor.Data.Models.Service", "Service")
                        .WithMany("Tasks")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK_Service_Task")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.User", b =>
                {
                    b.HasOne("BeyondLaDecor.Data.Models.User", "Administrator")
                        .WithMany("Clients")
                        .HasForeignKey("AdminstratorId")
                        .HasConstraintName("FK_Admin_Client")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.UserSetting", b =>
                {
                    b.HasOne("BeyondLaDecor.Data.Models.User", "Client")
                        .WithMany("ClientSpecificUserSettings")
                        .HasForeignKey("ClientId");

                    b.HasOne("BeyondLaDecor.Data.Models.Setting", "Setting")
                        .WithMany("UserSettings")
                        .HasForeignKey("SettingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BeyondLaDecor.Data.Models.User", "User")
                        .WithMany("UserSettings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Client_UserSetting")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("BeyondLaDecor.Data.Models.Vendor", b =>
                {
                    b.HasOne("BeyondLaDecor.Data.Models.ServiceType", "ServiceType")
                        .WithMany("Vendors")
                        .HasForeignKey("ServiceTypeId")
                        .HasConstraintName("FK_Vendor_ServiceType")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
